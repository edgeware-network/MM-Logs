2022-11-01 18:34:11,385 - 5035 - hummingbot.connector.exchange.eve.eve_exchange.EveExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 532, in _initialize_trading_pair_symbol_map
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path, params=params)
  File "/root/hummingbot/hummingbot/connector/exchange_py_base.py", line 845, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 507, in _api_request
    return await rest_assistant.execute_request(
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 67, in execute_request
    response = await self.call(request=request, timeout=timeout)
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 84, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/tasks.py", line 455, in wait_for
    return await fut
  File "/root/hummingbot/hummingbot/core/web_assistant/connections/rest_connection.py", line 10, in call
    aiohttp_resp = await self._client_session.request(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 520, in _request
    conn = await self._connector.connect(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api.eve.apstage.net:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
2022-11-01 18:37:39,955 - 4909 - hummingbot.connector.exchange.eve.eve_exchange.EveExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 532, in _initialize_trading_pair_symbol_map
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path, params=params)
  File "/root/hummingbot/hummingbot/connector/exchange_py_base.py", line 845, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 507, in _api_request
    return await rest_assistant.execute_request(
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 67, in execute_request
    response = await self.call(request=request, timeout=timeout)
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 84, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/tasks.py", line 455, in wait_for
    return await fut
  File "/root/hummingbot/hummingbot/core/web_assistant/connections/rest_connection.py", line 10, in call
    aiohttp_resp = await self._client_session.request(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 520, in _request
    conn = await self._connector.connect(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api.eve.apstage.net:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
2022-11-01 18:40:39,941 - 5057 - hummingbot.connector.exchange.eve.eve_exchange.EveExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 532, in _initialize_trading_pair_symbol_map
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path, params=params)
  File "/root/hummingbot/hummingbot/connector/exchange_py_base.py", line 845, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 507, in _api_request
    return await rest_assistant.execute_request(
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 67, in execute_request
    response = await self.call(request=request, timeout=timeout)
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 84, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/tasks.py", line 455, in wait_for
    return await fut
  File "/root/hummingbot/hummingbot/core/web_assistant/connections/rest_connection.py", line 10, in call
    aiohttp_resp = await self._client_session.request(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 520, in _request
    conn = await self._connector.connect(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api.eve.apstage.net:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
2022-11-01 20:47:52,888 - 4697 - hummingbot.connector.exchange.eve.eve_exchange.EveExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 532, in _initialize_trading_pair_symbol_map
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path, params=params)
  File "/root/hummingbot/hummingbot/connector/exchange_py_base.py", line 845, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 507, in _api_request
    return await rest_assistant.execute_request(
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 67, in execute_request
    response = await self.call(request=request, timeout=timeout)
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 84, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/tasks.py", line 455, in wait_for
    return await fut
  File "/root/hummingbot/hummingbot/core/web_assistant/connections/rest_connection.py", line 10, in call
    aiohttp_resp = await self._client_session.request(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 520, in _request
    conn = await self._connector.connect(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api.eve.apstage.net:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
2022-11-01 20:53:12,092 - 1755 - hummingbot.connector.exchange.eve.eve_exchange.EveExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1050, in create_connection
    transport, protocol = await self._create_connection_transport(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1080, in _create_connection_transport
    await waiter
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 529, in data_received
    ssldata, appdata = self._sslpipe.feed_ssldata(data)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/sslproto.py", line 189, in feed_ssldata
    self._sslobj.do_handshake()
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/ssl.py", line 944, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 532, in _initialize_trading_pair_symbol_map
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path, params=params)
  File "/root/hummingbot/hummingbot/connector/exchange_py_base.py", line 845, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 507, in _api_request
    return await rest_assistant.execute_request(
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 67, in execute_request
    response = await self.call(request=request, timeout=timeout)
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 84, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/tasks.py", line 455, in wait_for
    return await fut
  File "/root/hummingbot/hummingbot/core/web_assistant/connections/rest_connection.py", line 10, in call
    aiohttp_resp = await self._client_session.request(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 520, in _request
    conn = await self._connector.connect(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 971, in _wrap_create_connection
    raise ClientConnectorCertificateError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorCertificateError: Cannot connect to host api.eve.apstage.net:443 ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1108)')]
2022-11-01 20:56:00,455 - 1755 - hummingbot.client.hummingbot_application - INFO - stop command initiated.
2022-11-02 12:53:52,653 - 8631 - hummingbot.connector.exchange.eve.eve_exchange.EveExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 969, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore  # noqa
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1025, in create_connection
    raise exceptions[0]
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 1010, in create_connection
    sock = await self._connect_sock(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 924, in _connect_sock
    await self.sock_connect(sock, address)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/selector_events.py", line 494, in sock_connect
    return await fut
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/selector_events.py", line 526, in _sock_connect_cb
    raise OSError(err, f'Connect call failed {address}')
TimeoutError: [Errno 110] Connect call failed ('69.10.56.168', 443)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 532, in _initialize_trading_pair_symbol_map
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path, params=params)
  File "/root/hummingbot/hummingbot/connector/exchange_py_base.py", line 845, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/root/hummingbot/hummingbot/connector/utilities/oms_connector/oms_connector_exchange.py", line 507, in _api_request
    return await rest_assistant.execute_request(
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 67, in execute_request
    response = await self.call(request=request, timeout=timeout)
  File "/root/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 84, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/asyncio/tasks.py", line 455, in wait_for
    return await fut
  File "/root/hummingbot/hummingbot/core/web_assistant/connections/rest_connection.py", line 10, in call
    aiohttp_resp = await self._client_session.request(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 520, in _request
    conn = await self._connector.connect(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 535, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 892, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1051, in _create_direct_connection
    raise last_exc
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1020, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "/root/miniconda3/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 975, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host api.eve.apstage.net:443 ssl:default [Connect call failed ('69.10.56.168', 443)]
